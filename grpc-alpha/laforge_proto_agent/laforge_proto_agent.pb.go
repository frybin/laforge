// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: laforge_proto_agent/laforge_proto_agent.proto

package laforge_proto_agent

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TaskReply_Command int32

const (
	TaskReply_DEFAULT        TaskReply_Command = 0
	TaskReply_DELETE         TaskReply_Command = 1
	TaskReply_REBOOT         TaskReply_Command = 2
	TaskReply_EXTRACT        TaskReply_Command = 3
	TaskReply_DOWNLOAD       TaskReply_Command = 4
	TaskReply_CREATEUSER     TaskReply_Command = 5
	TaskReply_CREATEUSERPASS TaskReply_Command = 6
	TaskReply_ADDTOGROUP     TaskReply_Command = 7
	TaskReply_EXECUTE        TaskReply_Command = 8
	TaskReply_VALIDATE       TaskReply_Command = 9
)

// Enum value maps for TaskReply_Command.
var (
	TaskReply_Command_name = map[int32]string{
		0: "DEFAULT",
		1: "DELETE",
		2: "REBOOT",
		3: "EXTRACT",
		4: "DOWNLOAD",
		5: "CREATEUSER",
		6: "CREATEUSERPASS",
		7: "ADDTOGROUP",
		8: "EXECUTE",
		9: "VALIDATE",
	}
	TaskReply_Command_value = map[string]int32{
		"DEFAULT":        0,
		"DELETE":         1,
		"REBOOT":         2,
		"EXTRACT":        3,
		"DOWNLOAD":       4,
		"CREATEUSER":     5,
		"CREATEUSERPASS": 6,
		"ADDTOGROUP":     7,
		"EXECUTE":        8,
		"VALIDATE":       9,
	}
)

func (x TaskReply_Command) Enum() *TaskReply_Command {
	p := new(TaskReply_Command)
	*p = x
	return p
}

func (x TaskReply_Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskReply_Command) Descriptor() protoreflect.EnumDescriptor {
	return file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes[0].Descriptor()
}

func (TaskReply_Command) Type() protoreflect.EnumType {
	return &file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes[0]
}

func (x TaskReply_Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskReply_Command.Descriptor instead.
func (TaskReply_Command) EnumDescriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{3, 0}
}

// Heartbeat info
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string  `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Hostname string  `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Uptime   uint64  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Boottime uint64  `protobuf:"varint,4,opt,name=boottime,proto3" json:"boottime,omitempty"`
	Numprocs uint64  `protobuf:"varint,5,opt,name=numprocs,proto3" json:"numprocs,omitempty"`
	Os       string  `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	Hostid   string  `protobuf:"bytes,7,opt,name=hostid,proto3" json:"hostid,omitempty"`
	Load1    float64 `protobuf:"fixed64,8,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5    float64 `protobuf:"fixed64,9,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15   float64 `protobuf:"fixed64,10,opt,name=load15,proto3" json:"load15,omitempty"`
	Totalmem uint64  `protobuf:"varint,11,opt,name=totalmem,proto3" json:"totalmem,omitempty"`
	Freemem  uint64  `protobuf:"varint,12,opt,name=freemem,proto3" json:"freemem,omitempty"`
	Usedmem  uint64  `protobuf:"varint,13,opt,name=usedmem,proto3" json:"usedmem,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *HeartbeatRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HeartbeatRequest) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *HeartbeatRequest) GetBoottime() uint64 {
	if x != nil {
		return x.Boottime
	}
	return 0
}

func (x *HeartbeatRequest) GetNumprocs() uint64 {
	if x != nil {
		return x.Numprocs
	}
	return 0
}

func (x *HeartbeatRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HeartbeatRequest) GetHostid() string {
	if x != nil {
		return x.Hostid
	}
	return ""
}

func (x *HeartbeatRequest) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *HeartbeatRequest) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *HeartbeatRequest) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

func (x *HeartbeatRequest) GetTotalmem() uint64 {
	if x != nil {
		return x.Totalmem
	}
	return 0
}

func (x *HeartbeatRequest) GetFreemem() uint64 {
	if x != nil {
		return x.Freemem
	}
	return 0
}

func (x *HeartbeatRequest) GetUsedmem() uint64 {
	if x != nil {
		return x.Usedmem
	}
	return 0
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AvalibleTasks bool   `protobuf:"varint,2,opt,name=avalible_tasks,json=avalibleTasks,proto3" json:"avalible_tasks,omitempty"`
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HeartbeatReply) GetAvalibleTasks() bool {
	if x != nil {
		return x.AvalibleTasks
	}
	return false
}

// Task info
type TaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *TaskRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type TaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Command TaskReply_Command `protobuf:"varint,2,opt,name=command,proto3,enum=laforge_proto_agent.TaskReply_Command" json:"command,omitempty"`
	Args    string            `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *TaskReply) Reset() {
	*x = TaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReply) ProtoMessage() {}

func (x *TaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReply.ProtoReflect.Descriptor instead.
func (*TaskReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *TaskReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskReply) GetCommand() TaskReply_Command {
	if x != nil {
		return x.Command
	}
	return TaskReply_DEFAULT
}

func (x *TaskReply) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

type TaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TaskStatusRequest) Reset() {
	*x = TaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusRequest) ProtoMessage() {}

func (x *TaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusRequest.ProtoReflect.Descriptor instead.
func (*TaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *TaskStatusRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TaskStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TaskStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TaskStatusReply) Reset() {
	*x = TaskStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusReply) ProtoMessage() {}

func (x *TaskStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusReply.ProtoReflect.Descriptor instead.
func (*TaskStatusReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *TaskStatusReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_laforge_proto_agent_laforge_proto_agent_proto protoreflect.FileDescriptor

var file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x70, 0x72, 0x6f, 0x63, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x70, 0x72, 0x6f, 0x63, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64,
	0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c,
	0x6f, 0x61, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x64, 0x6d, 0x65, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x6d, 0x65, 0x6d, 0x22, 0x4f, 0x0a, 0x0e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x6c, 0x69, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x76, 0x61, 0x6c, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x2a, 0x0a,
	0x0b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72,
	0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x98, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x55, 0x53, 0x45, 0x52, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x55, 0x53, 0x45, 0x52, 0x50, 0x41, 0x53, 0x53, 0x10, 0x06, 0x12, 0x0e, 0x0a,
	0x0a, 0x41, 0x44, 0x44, 0x54, 0x4f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x09, 0x22, 0x48, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x9a, 0x02,
	0x0a, 0x07, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x25, 0x2e, 0x6c, 0x61, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x20, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x10, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6c, 0x61, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x7d, 0x0a, 0x16, 0x69, 0x6f,
	0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x72, 0x79, 0x62, 0x69, 0x6e, 0x2f, 0x6c,
	0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescOnce sync.Once
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData = file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc
)

func file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP() []byte {
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescOnce.Do(func() {
		file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData)
	})
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData
}

var file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_laforge_proto_agent_laforge_proto_agent_proto_goTypes = []interface{}{
	(TaskReply_Command)(0),    // 0: laforge_proto_agent.TaskReply.Command
	(*HeartbeatRequest)(nil),  // 1: laforge_proto_agent.HeartbeatRequest
	(*HeartbeatReply)(nil),    // 2: laforge_proto_agent.HeartbeatReply
	(*TaskRequest)(nil),       // 3: laforge_proto_agent.TaskRequest
	(*TaskReply)(nil),         // 4: laforge_proto_agent.TaskReply
	(*TaskStatusRequest)(nil), // 5: laforge_proto_agent.TaskStatusRequest
	(*TaskStatusReply)(nil),   // 6: laforge_proto_agent.TaskStatusReply
}
var file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs = []int32{
	0, // 0: laforge_proto_agent.TaskReply.command:type_name -> laforge_proto_agent.TaskReply.Command
	1, // 1: laforge_proto_agent.laforge.GetHeartBeat:input_type -> laforge_proto_agent.HeartbeatRequest
	3, // 2: laforge_proto_agent.laforge.GetTask:input_type -> laforge_proto_agent.TaskRequest
	5, // 3: laforge_proto_agent.laforge.InformTaskStatus:input_type -> laforge_proto_agent.TaskStatusRequest
	2, // 4: laforge_proto_agent.laforge.GetHeartBeat:output_type -> laforge_proto_agent.HeartbeatReply
	4, // 5: laforge_proto_agent.laforge.GetTask:output_type -> laforge_proto_agent.TaskReply
	6, // 6: laforge_proto_agent.laforge.InformTaskStatus:output_type -> laforge_proto_agent.TaskStatusReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_laforge_proto_agent_laforge_proto_agent_proto_init() }
func file_laforge_proto_agent_laforge_proto_agent_proto_init() {
	if File_laforge_proto_agent_laforge_proto_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_laforge_proto_agent_laforge_proto_agent_proto_goTypes,
		DependencyIndexes: file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs,
		EnumInfos:         file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes,
		MessageInfos:      file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes,
	}.Build()
	File_laforge_proto_agent_laforge_proto_agent_proto = out.File
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc = nil
	file_laforge_proto_agent_laforge_proto_agent_proto_goTypes = nil
	file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LaforgeClient is the client API for Laforge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LaforgeClient interface {
	GetHeartBeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatReply, error)
	GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskReply, error)
	InformTaskStatus(ctx context.Context, in *TaskStatusRequest, opts ...grpc.CallOption) (*TaskStatusReply, error)
}

type laforgeClient struct {
	cc grpc.ClientConnInterface
}

func NewLaforgeClient(cc grpc.ClientConnInterface) LaforgeClient {
	return &laforgeClient{cc}
}

func (c *laforgeClient) GetHeartBeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskReply, error) {
	out := new(TaskReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) InformTaskStatus(ctx context.Context, in *TaskStatusRequest, opts ...grpc.CallOption) (*TaskStatusReply, error) {
	out := new(TaskStatusReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/InformTaskStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LaforgeServer is the server API for Laforge service.
type LaforgeServer interface {
	GetHeartBeat(context.Context, *HeartbeatRequest) (*HeartbeatReply, error)
	GetTask(context.Context, *TaskRequest) (*TaskReply, error)
	InformTaskStatus(context.Context, *TaskStatusRequest) (*TaskStatusReply, error)
}

// UnimplementedLaforgeServer can be embedded to have forward compatible implementations.
type UnimplementedLaforgeServer struct {
}

func (*UnimplementedLaforgeServer) GetHeartBeat(context.Context, *HeartbeatRequest) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHeartBeat not implemented")
}
func (*UnimplementedLaforgeServer) GetTask(context.Context, *TaskRequest) (*TaskReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedLaforgeServer) InformTaskStatus(context.Context, *TaskStatusRequest) (*TaskStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InformTaskStatus not implemented")
}

func RegisterLaforgeServer(s *grpc.Server, srv LaforgeServer) {
	s.RegisterService(&_Laforge_serviceDesc, srv)
}

func _Laforge_GetHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetHeartBeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_InformTaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).InformTaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/InformTaskStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).InformTaskStatus(ctx, req.(*TaskStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Laforge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "laforge_proto_agent.laforge",
	HandlerType: (*LaforgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHeartBeat",
			Handler:    _Laforge_GetHeartBeat_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _Laforge_GetTask_Handler,
		},
		{
			MethodName: "InformTaskStatus",
			Handler:    _Laforge_InformTaskStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "laforge_proto_agent/laforge_proto_agent.proto",
}
