// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: laforge_proto_agent/laforge_proto_agent.proto

package laforge_proto_agent

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TaskReply_Command int32

const (
	TaskReply_DEFAULT        TaskReply_Command = 0
	TaskReply_DELETE         TaskReply_Command = 1
	TaskReply_REBOOT         TaskReply_Command = 2
	TaskReply_EXTRACT        TaskReply_Command = 3
	TaskReply_DOWNLOAD       TaskReply_Command = 4
	TaskReply_CREATEUSER     TaskReply_Command = 5
	TaskReply_CREATEUSERPASS TaskReply_Command = 6
	TaskReply_ADDTOGROUP     TaskReply_Command = 7
	TaskReply_EXECUTE        TaskReply_Command = 8
)

// Enum value maps for TaskReply_Command.
var (
	TaskReply_Command_name = map[int32]string{
		0: "DEFAULT",
		1: "DELETE",
		2: "REBOOT",
		3: "EXTRACT",
		4: "DOWNLOAD",
		5: "CREATEUSER",
		6: "CREATEUSERPASS",
		7: "ADDTOGROUP",
		8: "EXECUTE",
	}
	TaskReply_Command_value = map[string]int32{
		"DEFAULT":        0,
		"DELETE":         1,
		"REBOOT":         2,
		"EXTRACT":        3,
		"DOWNLOAD":       4,
		"CREATEUSER":     5,
		"CREATEUSERPASS": 6,
		"ADDTOGROUP":     7,
		"EXECUTE":        8,
	}
)

func (x TaskReply_Command) Enum() *TaskReply_Command {
	p := new(TaskReply_Command)
	*p = x
	return p
}

func (x TaskReply_Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskReply_Command) Descriptor() protoreflect.EnumDescriptor {
	return file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes[0].Descriptor()
}

func (TaskReply_Command) Type() protoreflect.EnumType {
	return &file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes[0]
}

func (x TaskReply_Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskReply_Command.Descriptor instead.
func (TaskReply_Command) EnumDescriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{24, 0}
}

// ping info
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PingReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// host info
type HostTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // Unique ID number for this Host.
	Ip   string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Os   string `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *HostTestRequest) Reset() {
	*x = HostTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostTestRequest) ProtoMessage() {}

func (x *HostTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostTestRequest.ProtoReflect.Descriptor instead.
func (*HostTestRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *HostTestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostTestRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostTestRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostTestRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type HostTestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Ip   string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Os   string `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *HostTestReply) Reset() {
	*x = HostTestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostTestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostTestReply) ProtoMessage() {}

func (x *HostTestReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostTestReply.ProtoReflect.Descriptor instead.
func (*HostTestReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *HostTestReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostTestReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostTestReply) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostTestReply) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type FileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to File:
	//	*FileRequest_Id
	//	*FileRequest_Name
	File isFileRequest_File `protobuf_oneof:"file"`
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (m *FileRequest) GetFile() isFileRequest_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (x *FileRequest) GetId() int32 {
	if x, ok := x.GetFile().(*FileRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *FileRequest) GetName() string {
	if x, ok := x.GetFile().(*FileRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isFileRequest_File interface {
	isFileRequest_File()
}

type FileRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type FileRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*FileRequest_Id) isFileRequest_File() {}

func (*FileRequest_Name) isFileRequest_File() {}

type FileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path        string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Md5         string `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	LastUpdated string `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *FileReply) Reset() {
	*x = FileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReply) ProtoMessage() {}

func (x *FileReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReply.ProtoReflect.Descriptor instead.
func (*FileReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *FileReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileReply) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileReply) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type CommandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CommandReply) Reset() {
	*x = CommandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandReply) ProtoMessage() {}

func (x *CommandReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandReply.ProtoReflect.Descriptor instead.
func (*CommandReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *CommandReply) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FileDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to File:
	//	*FileDefinition_Id
	//	*FileDefinition_Name
	//	*FileDefinition_Path
	File isFileDefinition_File `protobuf_oneof:"file"`
	Md5  string                `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *FileDefinition) Reset() {
	*x = FileDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDefinition) ProtoMessage() {}

func (x *FileDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDefinition.ProtoReflect.Descriptor instead.
func (*FileDefinition) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (m *FileDefinition) GetFile() isFileDefinition_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (x *FileDefinition) GetId() int32 {
	if x, ok := x.GetFile().(*FileDefinition_Id); ok {
		return x.Id
	}
	return 0
}

func (x *FileDefinition) GetName() string {
	if x, ok := x.GetFile().(*FileDefinition_Name); ok {
		return x.Name
	}
	return ""
}

func (x *FileDefinition) GetPath() string {
	if x, ok := x.GetFile().(*FileDefinition_Path); ok {
		return x.Path
	}
	return ""
}

func (x *FileDefinition) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type isFileDefinition_File interface {
	isFileDefinition_File()
}

type FileDefinition_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type FileDefinition_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

type FileDefinition_Path struct {
	Path string `protobuf:"bytes,3,opt,name=path,proto3,oneof"`
}

func (*FileDefinition_Id) isFileDefinition_File() {}

func (*FileDefinition_Name) isFileDefinition_File() {}

func (*FileDefinition_Path) isFileDefinition_File() {}

type FileDefinitionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path   string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Md5    string `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FileDefinitionReply) Reset() {
	*x = FileDefinitionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDefinitionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDefinitionReply) ProtoMessage() {}

func (x *FileDefinitionReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDefinitionReply.ProtoReflect.Descriptor instead.
func (*FileDefinitionReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *FileDefinitionReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileDefinitionReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileDefinitionReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDefinitionReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileDefinitionReply) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileDefinitionReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DirectoryDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DirectoryDefinition) Reset() {
	*x = DirectoryDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryDefinition) ProtoMessage() {}

func (x *DirectoryDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryDefinition.ProtoReflect.Descriptor instead.
func (*DirectoryDefinition) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{10}
}

func (x *DirectoryDefinition) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DirectoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DirectoryReply) Reset() {
	*x = DirectoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryReply) ProtoMessage() {}

func (x *DirectoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryReply.ProtoReflect.Descriptor instead.
func (*DirectoryReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{11}
}

func (x *DirectoryReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirectoryReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Reboot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Reboot) Reset() {
	*x = Reboot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reboot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reboot) ProtoMessage() {}

func (x *Reboot) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reboot.ProtoReflect.Descriptor instead.
func (*Reboot) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{12}
}

func (x *Reboot) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RebootReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id        int32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"` // Unique ID number for this Host.
	Ip        string               `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Os        string               `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RebootReportRequest) Reset() {
	*x = RebootReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootReportRequest) ProtoMessage() {}

func (x *RebootReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootReportRequest.ProtoReflect.Descriptor instead.
func (*RebootReportRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{13}
}

func (x *RebootReportRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RebootReportRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RebootReportRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RebootReportRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *RebootReportRequest) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RebootReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RebootReportReply) Reset() {
	*x = RebootReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootReportReply) ProtoMessage() {}

func (x *RebootReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootReportReply.ProtoReflect.Descriptor instead.
func (*RebootReportReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{14}
}

func (x *RebootReportReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RebootReportReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"` // Will need to be either a Hash or Encrypted.
}

func (x *PasswordRequest) Reset() {
	*x = PasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRequest) ProtoMessage() {}

func (x *PasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRequest.ProtoReflect.Descriptor instead.
func (*PasswordRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{15}
}

func (x *PasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PasswordReply) Reset() {
	*x = PasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordReply) ProtoMessage() {}

func (x *PasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordReply.ProtoReflect.Descriptor instead.
func (*PasswordReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{16}
}

func (x *PasswordReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Process:
	//	*ProcessRequest_Id
	//	*ProcessRequest_Name
	Process isProcessRequest_Process `protobuf_oneof:"process"`
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{17}
}

func (m *ProcessRequest) GetProcess() isProcessRequest_Process {
	if m != nil {
		return m.Process
	}
	return nil
}

func (x *ProcessRequest) GetId() int32 {
	if x, ok := x.GetProcess().(*ProcessRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *ProcessRequest) GetName() string {
	if x, ok := x.GetProcess().(*ProcessRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isProcessRequest_Process interface {
	isProcessRequest_Process()
}

type ProcessRequest_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type ProcessRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*ProcessRequest_Id) isProcessRequest_Process() {}

func (*ProcessRequest_Name) isProcessRequest_Process() {}

type ProcessReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProcessReply) Reset() {
	*x = ProcessReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReply) ProtoMessage() {}

func (x *ProcessReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReply.ProtoReflect.Descriptor instead.
func (*ProcessReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{18}
}

func (x *ProcessReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProcessReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *PortRequest) Reset() {
	*x = PortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortRequest) ProtoMessage() {}

func (x *PortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortRequest.ProtoReflect.Descriptor instead.
func (*PortRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{19}
}

func (x *PortRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *PortRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type PortReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Status   string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PortReply) Reset() {
	*x = PortReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortReply) ProtoMessage() {}

func (x *PortReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortReply.ProtoReflect.Descriptor instead.
func (*PortReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{20}
}

func (x *PortReply) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *PortReply) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *PortReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Heartbeat info
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname string  `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Uptime   uint64  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Boottime uint64  `protobuf:"varint,4,opt,name=boottime,proto3" json:"boottime,omitempty"`
	Numprocs uint64  `protobuf:"varint,5,opt,name=numprocs,proto3" json:"numprocs,omitempty"`
	Os       string  `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	Hostid   string  `protobuf:"bytes,7,opt,name=hostid,proto3" json:"hostid,omitempty"`
	Load1    float64 `protobuf:"fixed64,8,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5    float64 `protobuf:"fixed64,9,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15   float64 `protobuf:"fixed64,10,opt,name=load15,proto3" json:"load15,omitempty"`
	Totalmem uint64  `protobuf:"varint,11,opt,name=totalmem,proto3" json:"totalmem,omitempty"`
	Freemem  uint64  `protobuf:"varint,12,opt,name=freemem,proto3" json:"freemem,omitempty"`
	Usedmem  uint64  `protobuf:"varint,13,opt,name=usedmem,proto3" json:"usedmem,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{21}
}

func (x *HeartbeatRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HeartbeatRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HeartbeatRequest) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *HeartbeatRequest) GetBoottime() uint64 {
	if x != nil {
		return x.Boottime
	}
	return 0
}

func (x *HeartbeatRequest) GetNumprocs() uint64 {
	if x != nil {
		return x.Numprocs
	}
	return 0
}

func (x *HeartbeatRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HeartbeatRequest) GetHostid() string {
	if x != nil {
		return x.Hostid
	}
	return ""
}

func (x *HeartbeatRequest) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *HeartbeatRequest) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *HeartbeatRequest) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

func (x *HeartbeatRequest) GetTotalmem() uint64 {
	if x != nil {
		return x.Totalmem
	}
	return 0
}

func (x *HeartbeatRequest) GetFreemem() uint64 {
	if x != nil {
		return x.Freemem
	}
	return 0
}

func (x *HeartbeatRequest) GetUsedmem() uint64 {
	if x != nil {
		return x.Usedmem
	}
	return 0
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{22}
}

func (x *HeartbeatReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Task info
type TaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{23}
}

func (x *TaskRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Command TaskReply_Command `protobuf:"varint,2,opt,name=command,proto3,enum=laforge_proto_agent.TaskReply_Command" json:"command,omitempty"`
	Args    string            `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *TaskReply) Reset() {
	*x = TaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReply) ProtoMessage() {}

func (x *TaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReply.ProtoReflect.Descriptor instead.
func (*TaskReply) Descriptor() ([]byte, []int) {
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP(), []int{24}
}

func (x *TaskReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskReply) GetCommand() TaskReply_Command {
	if x != nil {
		return x.Command
	}
	return TaskReply_DEFAULT
}

func (x *TaskReply) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

var File_laforge_proto_agent_laforge_proto_agent_proto protoreflect.FileDescriptor

var file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x31, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x22, 0x53, 0x0a,
	0x0d, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x22, 0x3d, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x8c, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x40, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68,
	0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35,
	0x42, 0x06, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x3c, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x42, 0x0a, 0x06, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3b, 0x0a, 0x11, 0x52, 0x65, 0x62,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x43,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x3d, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x53,
	0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6f, 0x6f, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x62, 0x6f, 0x6f, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x70,
	0x72, 0x6f, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x70,
	0x72, 0x6f, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x61, 0x64, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x61,
	0x64, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64,
	0x31, 0x35, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x64, 0x6d, 0x65,
	0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x6d, 0x65, 0x6d,
	0x22, 0x28, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1d, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72,
	0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x55, 0x53, 0x45, 0x52, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x55, 0x53, 0x45, 0x52, 0x50, 0x41, 0x53, 0x53, 0x10, 0x06, 0x12, 0x0e, 0x0a,
	0x0a, 0x41, 0x44, 0x44, 0x54, 0x4f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10, 0x08, 0x32, 0xe7, 0x0c, 0x0a, 0x07, 0x6c,
	0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x20, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x61, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x6c, 0x61,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x20, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x6c,
	0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x72, 0x12, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x72, 0x12, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x61, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12,
	0x1b, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x28, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x62,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24,
	0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e,
	0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x25, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x20, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x7d, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x6c, 0x61, 0x66, 0x6f, 0x72,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x13,
	0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x72, 0x79, 0x62, 0x69, 0x6e, 0x2f, 0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6c, 0x61, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x6c, 0x61, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescOnce sync.Once
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData = file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc
)

func file_laforge_proto_agent_laforge_proto_agent_proto_rawDescGZIP() []byte {
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDescOnce.Do(func() {
		file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData)
	})
	return file_laforge_proto_agent_laforge_proto_agent_proto_rawDescData
}

var file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_laforge_proto_agent_laforge_proto_agent_proto_goTypes = []interface{}{
	(TaskReply_Command)(0),      // 0: laforge_proto_agent.TaskReply.Command
	(*PingRequest)(nil),         // 1: laforge_proto_agent.PingRequest
	(*PingReply)(nil),           // 2: laforge_proto_agent.PingReply
	(*HostTestRequest)(nil),     // 3: laforge_proto_agent.HostTestRequest
	(*HostTestReply)(nil),       // 4: laforge_proto_agent.HostTestReply
	(*FileRequest)(nil),         // 5: laforge_proto_agent.FileRequest
	(*FileReply)(nil),           // 6: laforge_proto_agent.FileReply
	(*CommandRequest)(nil),      // 7: laforge_proto_agent.CommandRequest
	(*CommandReply)(nil),        // 8: laforge_proto_agent.CommandReply
	(*FileDefinition)(nil),      // 9: laforge_proto_agent.FileDefinition
	(*FileDefinitionReply)(nil), // 10: laforge_proto_agent.FileDefinitionReply
	(*DirectoryDefinition)(nil), // 11: laforge_proto_agent.DirectoryDefinition
	(*DirectoryReply)(nil),      // 12: laforge_proto_agent.DirectoryReply
	(*Reboot)(nil),              // 13: laforge_proto_agent.Reboot
	(*RebootReportRequest)(nil), // 14: laforge_proto_agent.RebootReportRequest
	(*RebootReportReply)(nil),   // 15: laforge_proto_agent.RebootReportReply
	(*PasswordRequest)(nil),     // 16: laforge_proto_agent.PasswordRequest
	(*PasswordReply)(nil),       // 17: laforge_proto_agent.PasswordReply
	(*ProcessRequest)(nil),      // 18: laforge_proto_agent.ProcessRequest
	(*ProcessReply)(nil),        // 19: laforge_proto_agent.ProcessReply
	(*PortRequest)(nil),         // 20: laforge_proto_agent.PortRequest
	(*PortReply)(nil),           // 21: laforge_proto_agent.PortReply
	(*HeartbeatRequest)(nil),    // 22: laforge_proto_agent.HeartbeatRequest
	(*HeartbeatReply)(nil),      // 23: laforge_proto_agent.HeartbeatReply
	(*TaskRequest)(nil),         // 24: laforge_proto_agent.TaskRequest
	(*TaskReply)(nil),           // 25: laforge_proto_agent.TaskReply
	(*timestamp.Timestamp)(nil), // 26: google.protobuf.Timestamp
	(*empty.Empty)(nil),         // 27: google.protobuf.Empty
}
var file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs = []int32{
	26, // 0: laforge_proto_agent.Reboot.timestamp:type_name -> google.protobuf.Timestamp
	26, // 1: laforge_proto_agent.RebootReportRequest.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 2: laforge_proto_agent.TaskReply.command:type_name -> laforge_proto_agent.TaskReply.Command
	1,  // 3: laforge_proto_agent.laforge.GetPing:input_type -> laforge_proto_agent.PingRequest
	3,  // 4: laforge_proto_agent.laforge.GetHostTest:input_type -> laforge_proto_agent.HostTestRequest
	20, // 5: laforge_proto_agent.laforge.GetPort:input_type -> laforge_proto_agent.PortRequest
	5,  // 6: laforge_proto_agent.laforge.DownloadFile:input_type -> laforge_proto_agent.FileRequest
	9,  // 7: laforge_proto_agent.laforge.ExecuteFile:input_type -> laforge_proto_agent.FileDefinition
	9,  // 8: laforge_proto_agent.laforge.ExtractFile:input_type -> laforge_proto_agent.FileDefinition
	9,  // 9: laforge_proto_agent.laforge.DeleteFile:input_type -> laforge_proto_agent.FileDefinition
	9,  // 10: laforge_proto_agent.laforge.ValidateFile:input_type -> laforge_proto_agent.FileDefinition
	9,  // 11: laforge_proto_agent.laforge.ValidateFileHash:input_type -> laforge_proto_agent.FileDefinition
	11, // 12: laforge_proto_agent.laforge.DeleteDir:input_type -> laforge_proto_agent.DirectoryDefinition
	11, // 13: laforge_proto_agent.laforge.ValidateDir:input_type -> laforge_proto_agent.DirectoryDefinition
	7,  // 14: laforge_proto_agent.laforge.RunCommand:input_type -> laforge_proto_agent.CommandRequest
	13, // 15: laforge_proto_agent.laforge.RequestReboot:input_type -> laforge_proto_agent.Reboot
	14, // 16: laforge_proto_agent.laforge.ReportReboot:input_type -> laforge_proto_agent.RebootReportRequest
	16, // 17: laforge_proto_agent.laforge.SetAdminPassword:input_type -> laforge_proto_agent.PasswordRequest
	18, // 18: laforge_proto_agent.laforge.ValidateProcess:input_type -> laforge_proto_agent.ProcessRequest
	22, // 19: laforge_proto_agent.laforge.GetHeartBeat:input_type -> laforge_proto_agent.HeartbeatRequest
	24, // 20: laforge_proto_agent.laforge.GetTask:input_type -> laforge_proto_agent.TaskRequest
	2,  // 21: laforge_proto_agent.laforge.GetPing:output_type -> laforge_proto_agent.PingReply
	4,  // 22: laforge_proto_agent.laforge.GetHostTest:output_type -> laforge_proto_agent.HostTestReply
	21, // 23: laforge_proto_agent.laforge.GetPort:output_type -> laforge_proto_agent.PortReply
	6,  // 24: laforge_proto_agent.laforge.DownloadFile:output_type -> laforge_proto_agent.FileReply
	10, // 25: laforge_proto_agent.laforge.ExecuteFile:output_type -> laforge_proto_agent.FileDefinitionReply
	10, // 26: laforge_proto_agent.laforge.ExtractFile:output_type -> laforge_proto_agent.FileDefinitionReply
	10, // 27: laforge_proto_agent.laforge.DeleteFile:output_type -> laforge_proto_agent.FileDefinitionReply
	10, // 28: laforge_proto_agent.laforge.ValidateFile:output_type -> laforge_proto_agent.FileDefinitionReply
	10, // 29: laforge_proto_agent.laforge.ValidateFileHash:output_type -> laforge_proto_agent.FileDefinitionReply
	12, // 30: laforge_proto_agent.laforge.DeleteDir:output_type -> laforge_proto_agent.DirectoryReply
	12, // 31: laforge_proto_agent.laforge.ValidateDir:output_type -> laforge_proto_agent.DirectoryReply
	8,  // 32: laforge_proto_agent.laforge.RunCommand:output_type -> laforge_proto_agent.CommandReply
	27, // 33: laforge_proto_agent.laforge.RequestReboot:output_type -> google.protobuf.Empty
	15, // 34: laforge_proto_agent.laforge.ReportReboot:output_type -> laforge_proto_agent.RebootReportReply
	17, // 35: laforge_proto_agent.laforge.SetAdminPassword:output_type -> laforge_proto_agent.PasswordReply
	19, // 36: laforge_proto_agent.laforge.ValidateProcess:output_type -> laforge_proto_agent.ProcessReply
	23, // 37: laforge_proto_agent.laforge.GetHeartBeat:output_type -> laforge_proto_agent.HeartbeatReply
	25, // 38: laforge_proto_agent.laforge.GetTask:output_type -> laforge_proto_agent.TaskReply
	21, // [21:39] is the sub-list for method output_type
	3,  // [3:21] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_laforge_proto_agent_laforge_proto_agent_proto_init() }
func file_laforge_proto_agent_laforge_proto_agent_proto_init() {
	if File_laforge_proto_agent_laforge_proto_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostTestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDefinitionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reboot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*FileRequest_Id)(nil),
		(*FileRequest_Name)(nil),
	}
	file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*FileDefinition_Id)(nil),
		(*FileDefinition_Name)(nil),
		(*FileDefinition_Path)(nil),
	}
	file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ProcessRequest_Id)(nil),
		(*ProcessRequest_Name)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_laforge_proto_agent_laforge_proto_agent_proto_goTypes,
		DependencyIndexes: file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs,
		EnumInfos:         file_laforge_proto_agent_laforge_proto_agent_proto_enumTypes,
		MessageInfos:      file_laforge_proto_agent_laforge_proto_agent_proto_msgTypes,
	}.Build()
	File_laforge_proto_agent_laforge_proto_agent_proto = out.File
	file_laforge_proto_agent_laforge_proto_agent_proto_rawDesc = nil
	file_laforge_proto_agent_laforge_proto_agent_proto_goTypes = nil
	file_laforge_proto_agent_laforge_proto_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LaforgeClient is the client API for Laforge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LaforgeClient interface {
	GetPing(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	GetHostTest(ctx context.Context, in *HostTestRequest, opts ...grpc.CallOption) (*HostTestReply, error)
	GetPort(ctx context.Context, in *PortRequest, opts ...grpc.CallOption) (*PortReply, error)
	DownloadFile(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileReply, error)
	ExecuteFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error)
	ExtractFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error)
	DeleteFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error)
	ValidateFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error)
	ValidateFileHash(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error)
	DeleteDir(ctx context.Context, in *DirectoryDefinition, opts ...grpc.CallOption) (*DirectoryReply, error)
	ValidateDir(ctx context.Context, in *DirectoryDefinition, opts ...grpc.CallOption) (*DirectoryReply, error)
	RunCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error)
	RequestReboot(ctx context.Context, in *Reboot, opts ...grpc.CallOption) (*empty.Empty, error)
	ReportReboot(ctx context.Context, in *RebootReportRequest, opts ...grpc.CallOption) (*RebootReportReply, error)
	SetAdminPassword(ctx context.Context, in *PasswordRequest, opts ...grpc.CallOption) (*PasswordReply, error)
	ValidateProcess(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessReply, error)
	GetHeartBeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatReply, error)
	GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskReply, error)
}

type laforgeClient struct {
	cc grpc.ClientConnInterface
}

func NewLaforgeClient(cc grpc.ClientConnInterface) LaforgeClient {
	return &laforgeClient{cc}
}

func (c *laforgeClient) GetPing(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) GetHostTest(ctx context.Context, in *HostTestRequest, opts ...grpc.CallOption) (*HostTestReply, error) {
	out := new(HostTestReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetHostTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) GetPort(ctx context.Context, in *PortRequest, opts ...grpc.CallOption) (*PortReply, error) {
	out := new(PortReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) DownloadFile(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileReply, error) {
	out := new(FileReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/DownloadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ExecuteFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error) {
	out := new(FileDefinitionReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ExecuteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ExtractFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error) {
	out := new(FileDefinitionReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ExtractFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) DeleteFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error) {
	out := new(FileDefinitionReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ValidateFile(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error) {
	out := new(FileDefinitionReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ValidateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ValidateFileHash(ctx context.Context, in *FileDefinition, opts ...grpc.CallOption) (*FileDefinitionReply, error) {
	out := new(FileDefinitionReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ValidateFileHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) DeleteDir(ctx context.Context, in *DirectoryDefinition, opts ...grpc.CallOption) (*DirectoryReply, error) {
	out := new(DirectoryReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/DeleteDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ValidateDir(ctx context.Context, in *DirectoryDefinition, opts ...grpc.CallOption) (*DirectoryReply, error) {
	out := new(DirectoryReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ValidateDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) RunCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error) {
	out := new(CommandReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/RunCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) RequestReboot(ctx context.Context, in *Reboot, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/RequestReboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ReportReboot(ctx context.Context, in *RebootReportRequest, opts ...grpc.CallOption) (*RebootReportReply, error) {
	out := new(RebootReportReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ReportReboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) SetAdminPassword(ctx context.Context, in *PasswordRequest, opts ...grpc.CallOption) (*PasswordReply, error) {
	out := new(PasswordReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/SetAdminPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) ValidateProcess(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessReply, error) {
	out := new(ProcessReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/ValidateProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) GetHeartBeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laforgeClient) GetTask(ctx context.Context, in *TaskRequest, opts ...grpc.CallOption) (*TaskReply, error) {
	out := new(TaskReply)
	err := c.cc.Invoke(ctx, "/laforge_proto_agent.laforge/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LaforgeServer is the server API for Laforge service.
type LaforgeServer interface {
	GetPing(context.Context, *PingRequest) (*PingReply, error)
	GetHostTest(context.Context, *HostTestRequest) (*HostTestReply, error)
	GetPort(context.Context, *PortRequest) (*PortReply, error)
	DownloadFile(context.Context, *FileRequest) (*FileReply, error)
	ExecuteFile(context.Context, *FileDefinition) (*FileDefinitionReply, error)
	ExtractFile(context.Context, *FileDefinition) (*FileDefinitionReply, error)
	DeleteFile(context.Context, *FileDefinition) (*FileDefinitionReply, error)
	ValidateFile(context.Context, *FileDefinition) (*FileDefinitionReply, error)
	ValidateFileHash(context.Context, *FileDefinition) (*FileDefinitionReply, error)
	DeleteDir(context.Context, *DirectoryDefinition) (*DirectoryReply, error)
	ValidateDir(context.Context, *DirectoryDefinition) (*DirectoryReply, error)
	RunCommand(context.Context, *CommandRequest) (*CommandReply, error)
	RequestReboot(context.Context, *Reboot) (*empty.Empty, error)
	ReportReboot(context.Context, *RebootReportRequest) (*RebootReportReply, error)
	SetAdminPassword(context.Context, *PasswordRequest) (*PasswordReply, error)
	ValidateProcess(context.Context, *ProcessRequest) (*ProcessReply, error)
	GetHeartBeat(context.Context, *HeartbeatRequest) (*HeartbeatReply, error)
	GetTask(context.Context, *TaskRequest) (*TaskReply, error)
}

// UnimplementedLaforgeServer can be embedded to have forward compatible implementations.
type UnimplementedLaforgeServer struct {
}

func (*UnimplementedLaforgeServer) GetPing(context.Context, *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPing not implemented")
}
func (*UnimplementedLaforgeServer) GetHostTest(context.Context, *HostTestRequest) (*HostTestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostTest not implemented")
}
func (*UnimplementedLaforgeServer) GetPort(context.Context, *PortRequest) (*PortReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPort not implemented")
}
func (*UnimplementedLaforgeServer) DownloadFile(context.Context, *FileRequest) (*FileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedLaforgeServer) ExecuteFile(context.Context, *FileDefinition) (*FileDefinitionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteFile not implemented")
}
func (*UnimplementedLaforgeServer) ExtractFile(context.Context, *FileDefinition) (*FileDefinitionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExtractFile not implemented")
}
func (*UnimplementedLaforgeServer) DeleteFile(context.Context, *FileDefinition) (*FileDefinitionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFile not implemented")
}
func (*UnimplementedLaforgeServer) ValidateFile(context.Context, *FileDefinition) (*FileDefinitionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateFile not implemented")
}
func (*UnimplementedLaforgeServer) ValidateFileHash(context.Context, *FileDefinition) (*FileDefinitionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateFileHash not implemented")
}
func (*UnimplementedLaforgeServer) DeleteDir(context.Context, *DirectoryDefinition) (*DirectoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDir not implemented")
}
func (*UnimplementedLaforgeServer) ValidateDir(context.Context, *DirectoryDefinition) (*DirectoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateDir not implemented")
}
func (*UnimplementedLaforgeServer) RunCommand(context.Context, *CommandRequest) (*CommandReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCommand not implemented")
}
func (*UnimplementedLaforgeServer) RequestReboot(context.Context, *Reboot) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestReboot not implemented")
}
func (*UnimplementedLaforgeServer) ReportReboot(context.Context, *RebootReportRequest) (*RebootReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportReboot not implemented")
}
func (*UnimplementedLaforgeServer) SetAdminPassword(context.Context, *PasswordRequest) (*PasswordReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAdminPassword not implemented")
}
func (*UnimplementedLaforgeServer) ValidateProcess(context.Context, *ProcessRequest) (*ProcessReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateProcess not implemented")
}
func (*UnimplementedLaforgeServer) GetHeartBeat(context.Context, *HeartbeatRequest) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHeartBeat not implemented")
}
func (*UnimplementedLaforgeServer) GetTask(context.Context, *TaskRequest) (*TaskReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}

func RegisterLaforgeServer(s *grpc.Server, srv LaforgeServer) {
	s.RegisterService(&_Laforge_serviceDesc, srv)
}

func _Laforge_GetPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetPing(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_GetHostTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetHostTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetHostTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetHostTest(ctx, req.(*HostTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_GetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetPort(ctx, req.(*PortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_DownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).DownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/DownloadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).DownloadFile(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ExecuteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ExecuteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ExecuteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ExecuteFile(ctx, req.(*FileDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ExtractFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ExtractFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ExtractFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ExtractFile(ctx, req.(*FileDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).DeleteFile(ctx, req.(*FileDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ValidateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ValidateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ValidateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ValidateFile(ctx, req.(*FileDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ValidateFileHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ValidateFileHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ValidateFileHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ValidateFileHash(ctx, req.(*FileDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_DeleteDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirectoryDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).DeleteDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/DeleteDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).DeleteDir(ctx, req.(*DirectoryDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ValidateDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirectoryDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ValidateDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ValidateDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ValidateDir(ctx, req.(*DirectoryDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_RunCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).RunCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/RunCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).RunCommand(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_RequestReboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Reboot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).RequestReboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/RequestReboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).RequestReboot(ctx, req.(*Reboot))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ReportReboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ReportReboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ReportReboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ReportReboot(ctx, req.(*RebootReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_SetAdminPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).SetAdminPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/SetAdminPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).SetAdminPassword(ctx, req.(*PasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_ValidateProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).ValidateProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/ValidateProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).ValidateProcess(ctx, req.(*ProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_GetHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetHeartBeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laforge_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaforgeServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/laforge_proto_agent.laforge/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaforgeServer).GetTask(ctx, req.(*TaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Laforge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "laforge_proto_agent.laforge",
	HandlerType: (*LaforgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPing",
			Handler:    _Laforge_GetPing_Handler,
		},
		{
			MethodName: "GetHostTest",
			Handler:    _Laforge_GetHostTest_Handler,
		},
		{
			MethodName: "GetPort",
			Handler:    _Laforge_GetPort_Handler,
		},
		{
			MethodName: "DownloadFile",
			Handler:    _Laforge_DownloadFile_Handler,
		},
		{
			MethodName: "ExecuteFile",
			Handler:    _Laforge_ExecuteFile_Handler,
		},
		{
			MethodName: "ExtractFile",
			Handler:    _Laforge_ExtractFile_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _Laforge_DeleteFile_Handler,
		},
		{
			MethodName: "ValidateFile",
			Handler:    _Laforge_ValidateFile_Handler,
		},
		{
			MethodName: "ValidateFileHash",
			Handler:    _Laforge_ValidateFileHash_Handler,
		},
		{
			MethodName: "DeleteDir",
			Handler:    _Laforge_DeleteDir_Handler,
		},
		{
			MethodName: "ValidateDir",
			Handler:    _Laforge_ValidateDir_Handler,
		},
		{
			MethodName: "RunCommand",
			Handler:    _Laforge_RunCommand_Handler,
		},
		{
			MethodName: "RequestReboot",
			Handler:    _Laforge_RequestReboot_Handler,
		},
		{
			MethodName: "ReportReboot",
			Handler:    _Laforge_ReportReboot_Handler,
		},
		{
			MethodName: "SetAdminPassword",
			Handler:    _Laforge_SetAdminPassword_Handler,
		},
		{
			MethodName: "ValidateProcess",
			Handler:    _Laforge_ValidateProcess_Handler,
		},
		{
			MethodName: "GetHeartBeat",
			Handler:    _Laforge_GetHeartBeat_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _Laforge_GetTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "laforge_proto_agent/laforge_proto_agent.proto",
}
