syntax = "proto3";
package laforge_proto;

option go_package = "github.com/frybin/laforge/grpc-alpha/laforge_proto/laforge_proto";
option java_multiple_files = true;
option java_package = "io.laforge.proto";
option java_outer_classname = "laforge_Proto";


service laforge {
    rpc GetPing (PingRequest) returns (PingReply) {}
    rpc GetHostTest (HostTestRequest) returns (HostTestReply) {}
    rpc GetCompetition (CompetitionRequest) returns (CompetitionReply) {}
    rpc GetEnvironment (EnvironmentRequest) returns (EnvironmentReply) {}
    rpc GetBuildConfig (BuildConfigRequest) returns (BuildConfigReply) {}
    rpc GetTeam (TeamRequest) returns (TeamReply) {}
    rpc GetUser (UserRequest) returns (UserReply) {}
    rpc GetRole (RoleRequest) returns (RoleReply) {}
    rpc GetPermission (PermissionRequest) returns (PermissionReply) {}
    rpc GetNetwork (NetworkRequest) returns (NetworkReply) {}
    rpc GetHost (HostRequest) returns (HostReply) {}
    rpc GetStep (StepRequest) returns (StepReply) {}
    rpc GetError (ErrorRequest) returns (ErrorReply) {}
    rpc GetScript (ScriptRequest) returns (ScriptReply) {}
    rpc GetFile (FileRequest) returns (FileReply) {}
    rpc GetCommand (CommandRequest) returns (CommandReply) {}
    rpc GetDNS_Record (DNS_RecordRequest) returns (DNS_RecordReply) {}
}

/* TEST MESSAGES */

//ping info
message PingRequest {
  string name = 1;
  int32 id = 2;
}

message PingReply {
  string name = 1;
  int32 id = 2;
}

// host info
message HostTestRequest {
  string name = 1;
  int32 id = 2;  // Unique ID number for this Host.
  string ip = 3;
  string os = 4;

}

message HostTestReply {
  string name = 1;
  int32 id = 2;
  string ip = 3;
  string os = 4;
}

/*  BASE LAFORGE */
// Fields Source: https://app.swaggerhub.com/apis/LaForge/LaforgeAPI/0.0.1-oas3#

// Competition 

message CompetitionRequest {
    oneof comp {
        string name = 1;
        string id = 2;
    }
}

message CompetitionReply {
    string id = 1;
    string name = 2;
    repeated int32 environments = 3;
    repeated int32 users = 4;
    repeated int32 build_configs = 5;
    
}

// Environment

message EnvironmentRequest {
    oneof env {
        string name = 1;
        string state = 2;
        int32 id = 3;
        int32 competition_id = 4;
        int32 owner_id = 5;
    }
}

message EnvironmentReply {
    int32 id = 1;
    int32 competition_id = 2;
    int32 owner_id = 3;
    string name = 4;
    string state = 5;
    repeated string attrs = 6;
    repeated int32 networks = 7;
    repeated int32 teams = 8;
}

// Build_Configs

message BuildConfigRequest {
    oneof buildconfig {
        int32 id = 1;
        int32 competition_id = 2;
        string provider = 3;
    }
}

message BuildConfigReply {
    int32 id = 1;
    int32 competition_id = 2;
    string provider = 3;
}

// Teams

message TeamRequest {
    oneof team {
        int32 id = 1;
        int32 environment_id = 2;
        int32 number = 3;
        string tag = 4;
        bool enabled = 5;
        string state = 6;
        int32 network_id = 7;
    }
}

message TeamReply {
    int32 id = 1;
    int32 environment_id = 2;
    int32 number = 3;
    repeated string tags = 4;
    bool enabled = 5;
    string state = 6;
    repeated int32 networks = 7;
}

// Users

message UserRequest {
    oneof user {
        int32 id = 1;
        string email = 2;
        string phone = 3;
        string name = 4;
        string organization = 5;
        string role = 6;
        string github = 7;
    }
}

message UserReply {
    int32 id = 1;
    string email = 2;
    string phone = 3;
    string name = 4;
    string organization = 5;
    string role = 6;
    string github = 7;
}

// Role

message RoleRequest {
    oneof role {
        int32 id = 1;
        string name = 2;
    }
}

message RoleReply {
    int32 id = 1;
    string name = 2;
    repeated string permissions = 3;
}

// Permission

message PermissionRequest {
    oneof permission {
        int32 id = 1;
        string name = 2;
    }
}

message PermissionReply {
    int32 id = 1;
    string name = 2;
}

// Networks

message NetworkRequest {
    oneof network {
        int32 id = 1;
        int32 environment_id = 2;
        string domain = 3;
        string state = 4;
    }
}

message NetworkReply {
    int32 id = 1;
    int32 environment_id = 2;
    string domain = 3;
    string state = 4;
    repeated string attrs = 5;
    repeated string hosts = 6;
}

// Hosts

message HostRequest {
    oneof host {
        int32 id = 1;
        int32 network_id = 2;
        string hostname = 3;
        string os = 4;
        string ip_address = 5;
        string conn_info = 6;
        string state = 7;
    }
}

message HostReply {
    int32 id = 1;
    int32 network_id = 2;
    string hostname = 3;
    string os = 4;
    string ip_address = 5;
    string conn_info = 6;
    string state = 7;
    repeated string attrs = 8;
    repeated string steps = 9;
}

// Step

message StepRequest {
    oneof step {
        int32 id = 1;
        int32 host_id = 2;
        string definition_type = 3;
        int32 definition_id = 4;
        int32 order = 5;
        string state = 6;
    }
}

message StepReply {
    int32 id = 1;
    int32 host_id = 2;
    string definition_type = 3;
    int32 definition_id = 4;
    int32 order = 5;
    string state = 6;
}

// Error

message ErrorRequest {
    oneof error {
        string code = 1;
        string message = 2;
    }
}

message ErrorReply {
    string code = 1;
    string message = 2;
}


/* EXTRA METHODS - NOT FROM API DOC */

// Scripts

message ScriptRequest {
    oneof script {
        int32 id = 1;
        string name = 2;
        string os = 3;
        string provider = 4;
        string type = 5;
        string md5 = 6;
    }
}

message ScriptReply {
    int32 id = 1;
    string name = 2;
    string os = 3;
    string provider = 4;
    string type = 5;
    string md5 = 6;
    string last_updated = 7;
    string description = 8;
    repeated string args = 9;
}

// Files 

message FileRequest {
    oneof file {
        int32 id = 1;
        string name = 2;
        string os = 3;
        string provider = 4;
        string type = 5;
        string md5 = 6;
    }
}

message FileReply {
    int32 id = 1;
    string name = 2;
    string os = 3;
    string provider = 4;
    string type = 5;
    string md5 = 6;
    string last_updated = 7;
}

// Commands

message CommandRequest {
    oneof command {
        int32 id = 1;
        string name = 2;
        string os = 3;
        string provider = 4;
        string type = 5;
        string md5 = 6;
    }
}

message CommandReply {
    int32 id = 1;
    string name = 2;
    string os = 3;
    string provider = 4;
    string type = 5;
    string md5 = 6;
    string command = 7;
    string last_updated = 8;
}

// DNS Records

message DNS_RecordRequest {
    oneof dns_record {
        int32 id = 1;
        string name = 2;
        string type = 3;
        string ip = 4;
        string provider = 5;
        int32 host_id = 6;
    }
}

message DNS_RecordReply {
        int32 id = 1;
        string name = 2;
        string type = 3;
        string ip = 4;
        string provider = 5;
        int32 host_id = 6;
}